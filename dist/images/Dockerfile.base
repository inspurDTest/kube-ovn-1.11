# syntax = docker/dockerfile:experimental
FROM ubuntu:22.04

ARG ARCH
ARG NO_AVX512=false
ARG DEBIAN_FRONTEND=noninteractive
ENV SRC_DIR='/usr/src'

RUN apt update && apt install -y git curl build-essential fakeroot \
    autoconf automake bzip2 debhelper-compat dh-exec dh-python dh-sequence-python3 dh-sequence-sphinxdoc \
    graphviz iproute2 libcap-ng-dev libdbus-1-dev libnuma-dev libpcap-dev libssl-dev libtool libunbound-dev \
    openssl pkg-config procps python3-all-dev python3-setuptools python3-sortedcontainers python3-sphinx 

RUN cd /usr/src/ && \
    git clone --depth=1 https://github.com/inspurDTest/openvswitch.git && \
    cd openvswitch && \
    ./boot.sh && \
    if [ "$ARCH" = "amd64" ]; then ./configure --without-dpdk CFLAGS="-O2 -g -msse4.2 -mpopcnt -fPIC"; else \
    ./configure --without-dpdk; fi && \
    rm -rf .git && \
    make -j 8 && \
    make install

RUN cd /usr/src/ && \
    tar czvf openvswitch.tar.gz openvswitch && \
    cp openvswitch.tar.gz openvswitch

RUN cd /usr/src/ && git clone --depth=1 https://github.com/inspurDTest/ovn-22.09.1.git && \
    cd ovn-22.09.1 && \
    sed -i 's/OVN/ovn/g' debian/changelog && \
    rm -rf .git && \
    ./boot.sh && \
    if [ "$ARCH" = "amd64" ]; then ./configure --with-ovs-source=/usr/src/openvswitch CFLAGS="-O2 -g -msse4.2 -mpopcnt -fPIC"; else \
    ./configure --with-ovs-source=/usr/src/openvswitch; fi && \
    make -j 8 && \
    make install

ARG DEBIAN_FRONTEND=noninteractive
RUN apt update && apt upgrade -y && apt install ca-certificates python3 hostname libunwind8 netbase \
        ethtool iproute2 ncat libunbound-dev procps libatomic1 kmod iptables python3-netifaces python3-sortedcontainers \
        libjs-sphinxdoc tcpdump ipset curl uuid-runtime openssl inetutils-ping arping ndisc6 \
        logrotate dnsutils net-tools strongswan strongswan-pki libcharon-extra-plugins \
        libcharon-extauth-plugins libstrongswan-extra-plugins libstrongswan-standard-plugins -y --no-install-recommends && \
        rm -rf /var/lib/apt/lists/* && \
        rm -rf /etc/localtime

RUN mkdir -p /var/run/openvswitch && \
    mkdir -p /var/run/ovn && \
    mkdir -p /etc/cni/net.d && \
    mkdir -p /opt/cni/bin

ARG ARCH
ENV CNI_VERSION=v1.2.0
RUN curl -sSf -L --retry 5 https://github.com/containernetworking/plugins/releases/download/${CNI_VERSION}/cni-plugins-linux-${ARCH}-${CNI_VERSION}.tgz | tar -xz -C . ./loopback ./portmap ./macvlan

ENV KUBE_VERSION="v1.28.2"

RUN curl -L https://dl.k8s.io/${KUBE_VERSION}/kubernetes-client-linux-${ARCH}.tar.gz | tar -xz -C . && cp ./kubernetes/client/bin/kubectl /usr/bin/kubectl \
 && chmod +x /usr/bin/kubectl && rm -rf ./kubernetes


ENV DUMB_INIT_VERSION="1.2.5"
RUN dump_arch="x86_64"; \
    if [ "$ARCH" = "arm64" ]; then dump_arch="aarch64"; fi; \
    curl -sSf -L --retry 5 -o /usr/bin/dumb-init https://github.com/Yelp/dumb-init/releases/download/v${DUMB_INIT_VERSION}/dumb-init_${DUMB_INIT_VERSION}_${dump_arch} && \
    chmod +x /usr/bin/dumb-init

ARG DEBUG=false
RUN if [ "${DEBUG}" = "true" ]; then \
        apt update && apt install -y --no-install-recommends gdb valgrind && \
        rm -rf /var/lib/apt/lists/* ; \
    fi

ENTRYPOINT ["/usr/bin/dumb-init", "--"]
